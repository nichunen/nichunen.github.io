<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>倪春恩的博客</title>
  
  <subtitle>倪春恩的博客</subtitle>
  <link href="http://nichunen.github.io/atom.xml" rel="self"/>
  
  <link href="http://nichunen.github.io/"/>
  <updated>2023-11-03T12:13:44.791Z</updated>
  <id>http://nichunen.github.io/</id>
  
  <author>
    <name>Ni Chunen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gold-16-8</title>
    <link href="http://nichunen.github.io/2023/11/03/gold-16-8/"/>
    <id>http://nichunen.github.io/2023/11/03/gold-16-8/</id>
    <published>2023-11-03T12:11:34.000Z</published>
    <updated>2023-11-03T12:13:44.791Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个整数，打印该整数的英文描述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;输入: 123
输出:</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-7</title>
    <link href="http://nichunen.github.io/2023/11/02/gold-16-7/"/>
    <id>http://nichunen.github.io/2023/11/02/gold-16-7/</id>
    <published>2023-11-02T01:59:37.000Z</published>
    <updated>2023-11-02T02:27:35.846Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;编写一个方法，找出两个数字&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;中最大的那一个。不得使用if-else或其他比较运算符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-6</title>
    <link href="http://nichunen.github.io/2023/11/01/gold-16-6/"/>
    <id>http://nichunen.github.io/2023/11/01/gold-16-6/</id>
    <published>2023-11-01T03:00:49.000Z</published>
    <updated>2023-11-01T06:26:51.669Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定两个整数数组&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;，计算具有最小差绝对值的一对数值（每个数组中取一个值），并返回该对数值的差&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-5</title>
    <link href="http://nichunen.github.io/2023/10/31/gold-16-5/"/>
    <id>http://nichunen.github.io/2023/10/31/gold-16-5/</id>
    <published>2023-10-31T05:13:07.000Z</published>
    <updated>2023-10-31T06:16:41.551Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计一个算法，算出 n 阶乘有多少个尾随零。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;输入: 3
输出:</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-4</title>
    <link href="http://nichunen.github.io/2023/10/30/gold-16-4/"/>
    <id>http://nichunen.github.io/2023/10/30/gold-16-4/</id>
    <published>2023-10-30T03:02:42.000Z</published>
    <updated>2023-10-30T03:46:22.883Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计一个算法，判断玩家是否赢了井字游戏。输入是一个 N x N 的数组棋盘，由字符” “，”X”和”O”组成，其中字符” “代表一个空位。&lt;/p&gt;
&lt;p&gt;以下是井字游戏的规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;玩家轮流将字符放入空位（”</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-3</title>
    <link href="http://nichunen.github.io/2023/10/29/gold-16-3/"/>
    <id>http://nichunen.github.io/2023/10/29/gold-16-3/</id>
    <published>2023-10-29T06:13:25.000Z</published>
    <updated>2023-10-30T03:02:54.247Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定两条线段（表示为起点&lt;code&gt;start = {X1, Y1}&lt;/code&gt;和终点&lt;code&gt;end = {X2,</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-2</title>
    <link href="http://nichunen.github.io/2023/10/27/gold-16-2/"/>
    <id>http://nichunen.github.io/2023/10/27/gold-16-2/</id>
    <published>2023-10-27T02:41:17.000Z</published>
    <updated>2023-10-27T06:29:17.305Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计一个方法，找出任意指定单词在一本书中的出现频率。&lt;/p&gt;
&lt;p&gt;你的实现应该支持如下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WordsFrequency(book)&lt;/code&gt;构造函数，参数为字符串数组构成的一本书&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get(word</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-16-1</title>
    <link href="http://nichunen.github.io/2023/10/26/gold-16-1/"/>
    <id>http://nichunen.github.io/2023/10/26/gold-16-1/</id>
    <published>2023-10-26T11:56:04.000Z</published>
    <updated>2023-10-26T12:02:08.390Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;编写一个函数，不用临时变量，直接交换&lt;code&gt;numbers = [a, b]&lt;/code&gt;中&lt;code&gt;a&lt;/code&gt;与&lt;code&gt;b&lt;/code&gt;的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-10-11</title>
    <link href="http://nichunen.github.io/2023/10/25/gold-10-11/"/>
    <id>http://nichunen.github.io/2023/10/25/gold-10-11/</id>
    <published>2023-10-25T07:07:25.000Z</published>
    <updated>2023-10-25T07:11:33.233Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在一个整数数组中，“峰”是大于或等于相邻整数的元素，相应地，“谷”是小于或等于相邻整数的元素。例如，在数组{5, 8, 4, 2, 3, 4, 6}中，{8, 6}是峰， {5,</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-10-10</title>
    <link href="http://nichunen.github.io/2023/10/23/gold-10-10/"/>
    <id>http://nichunen.github.io/2023/10/23/gold-10-10/</id>
    <published>2023-10-23T11:21:12.000Z</published>
    <updated>2023-10-24T15:02:44.736Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;假设你正在读取一串整数。每隔一段时间，你希望能找出数字 x 的秩(小于或等于 x 的值的个数)。请实现数据结构和算法来支持这些操作，也就是说：&lt;/p&gt;
&lt;p&gt;实现 &lt;code&gt;track(int x)&lt;/code&gt; 方法，每读入一个数字都会调用该方法；&lt;/p&gt;
&lt;p&gt;实现</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-10-9</title>
    <link href="http://nichunen.github.io/2023/10/19/gold-10-9/"/>
    <id>http://nichunen.github.io/2023/10/19/gold-10-9/</id>
    <published>2023-10-19T05:57:13.000Z</published>
    <updated>2023-10-20T06:11:26.270Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定M×N矩阵，每一行、每一列都按升序排列，请编写代码找出某元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现有矩阵 matrix 如下：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-10-5</title>
    <link href="http://nichunen.github.io/2023/10/18/gold-10-5/"/>
    <id>http://nichunen.github.io/2023/10/18/gold-10-5/</id>
    <published>2023-10-18T09:22:01.000Z</published>
    <updated>2023-10-18T15:56:01.249Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;稀疏数组搜索。有个排好序的字符串数组，其中散布着一些空字符串，编写一种方法，找出给定字符串的位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-10-3</title>
    <link href="http://nichunen.github.io/2023/10/16/gold-10-3/"/>
    <id>http://nichunen.github.io/2023/10/16/gold-10-3/</id>
    <published>2023-10-16T06:42:50.000Z</published>
    <updated>2023-10-16T09:44:22.454Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;搜索旋转数组。给定一个排序后的数组，包含n个整数，但这个数组已被旋转过很多次了，次数不详。请编写代码找出数组中的某个元素，假设数组元素原先是按升序排列的。若有多个相同元素，返回索引值最小的一个。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-10-1</title>
    <link href="http://nichunen.github.io/2023/10/15/gold-10-1/"/>
    <id>http://nichunen.github.io/2023/10/15/gold-10-1/</id>
    <published>2023-10-15T03:15:30.000Z</published>
    <updated>2023-10-15T05:46:16.943Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定两个排序后的数组 A 和 B，其中 A 的末端有足够的缓冲空间容纳 B。 编写一个方法，将 B 合并入 A 并排序。&lt;/p&gt;
&lt;p&gt;初始化 A 和 B 的元素数量分别为 &lt;em&gt;m&lt;/em&gt; 和</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-14</title>
    <link href="http://nichunen.github.io/2023/10/13/gold-8-14/"/>
    <id>http://nichunen.github.io/2023/10/13/gold-8-14/</id>
    <published>2023-10-13T03:09:28.000Z</published>
    <updated>2023-10-13T08:45:14.272Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个布尔表达式和一个期望的布尔结果 result，布尔表达式由 &lt;code&gt;0&lt;/code&gt; (false)、&lt;code&gt;1&lt;/code&gt; (true)、&lt;code&gt;&amp;amp;&lt;/code&gt; (AND)、 &lt;code&gt;|&lt;/code&gt; (OR) 和</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-13</title>
    <link href="http://nichunen.github.io/2023/10/12/gold-8-13/"/>
    <id>http://nichunen.github.io/2023/10/12/gold-8-13/</id>
    <published>2023-10-12T05:54:37.000Z</published>
    <updated>2023-10-12T13:02:49.318Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;堆箱子。给你一堆n个箱子，箱子宽 wi、深 di、高 hi。箱子不能翻转，将箱子堆起来时，下面箱子的宽度、高度和深度必须大于上面的箱子。实现一种方法，搭出最高的一堆箱子。箱堆的高度为每个箱子高度的总和。&lt;/p&gt;
&lt;p&gt;输入使用数组&lt;code&gt;[wi, di,</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-12</title>
    <link href="http://nichunen.github.io/2023/10/11/gold-8-12/"/>
    <id>http://nichunen.github.io/2023/10/11/gold-8-12/</id>
    <published>2023-10-11T13:22:38.000Z</published>
    <updated>2023-10-11T13:23:18.976Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计一种算法，打印 N 皇后在 N × N</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-11</title>
    <link href="http://nichunen.github.io/2023/10/10/gold-8-11/"/>
    <id>http://nichunen.github.io/2023/10/10/gold-8-11/</id>
    <published>2023-10-10T03:06:55.000Z</published>
    <updated>2023-10-10T07:48:22.536Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;硬币。给定数量不限的硬币，币值为25分、10分、5分和1分，编写代码计算n分有几种表示法。(结果可能会很大，你需要将结果模上1000000007)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-10</title>
    <link href="http://nichunen.github.io/2023/10/09/gold-8-10/"/>
    <id>http://nichunen.github.io/2023/10/09/gold-8-10/</id>
    <published>2023-10-09T05:34:27.000Z</published>
    <updated>2023-10-09T08:51:01.023Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;编写函数，实现许多图片编辑软件都支持的「颜色填充」功能。&lt;/p&gt;
&lt;p&gt;待填充的图像用二维数组 &lt;code&gt;image&lt;/code&gt; 表示，元素为初始颜色值。初始坐标点的行坐标为 &lt;code&gt;sr&lt;/code&gt; 列坐标为 &lt;code&gt;sc&lt;/code&gt;。需要填充的新颜色为</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-9</title>
    <link href="http://nichunen.github.io/2023/10/08/gold-8-9/"/>
    <id>http://nichunen.github.io/2023/10/08/gold-8-9/</id>
    <published>2023-10-08T02:56:21.000Z</published>
    <updated>2023-10-08T03:18:23.060Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;括号。设计一种算法，打印n对括号的所有合法的（例如，开闭一一对应）组合。&lt;/p&gt;
&lt;p&gt;说明：解集不能包含重复的子集。&lt;/p&gt;
&lt;p&gt;例如，给出 n = 3，生成结果为：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
</feed>
