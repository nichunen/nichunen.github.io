<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>倪春恩的博客</title>
  
  <subtitle>倪春恩的博客</subtitle>
  <link href="http://nichunen.github.io/atom.xml" rel="self"/>
  
  <link href="http://nichunen.github.io/"/>
  <updated>2023-10-09T08:51:01.023Z</updated>
  <id>http://nichunen.github.io/</id>
  
  <author>
    <name>Ni Chunen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gold-8-10</title>
    <link href="http://nichunen.github.io/2023/10/09/gold-8-10/"/>
    <id>http://nichunen.github.io/2023/10/09/gold-8-10/</id>
    <published>2023-10-09T05:34:27.000Z</published>
    <updated>2023-10-09T08:51:01.023Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;编写函数，实现许多图片编辑软件都支持的「颜色填充」功能。&lt;/p&gt;
&lt;p&gt;待填充的图像用二维数组 &lt;code&gt;image&lt;/code&gt; 表示，元素为初始颜色值。初始坐标点的行坐标为 &lt;code&gt;sr&lt;/code&gt; 列坐标为 &lt;code&gt;sc&lt;/code&gt;。需要填充的新颜色为</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-9</title>
    <link href="http://nichunen.github.io/2023/10/08/gold-8-9/"/>
    <id>http://nichunen.github.io/2023/10/08/gold-8-9/</id>
    <published>2023-10-08T02:56:21.000Z</published>
    <updated>2023-10-08T03:18:23.060Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;括号。设计一种算法，打印n对括号的所有合法的（例如，开闭一一对应）组合。&lt;/p&gt;
&lt;p&gt;说明：解集不能包含重复的子集。&lt;/p&gt;
&lt;p&gt;例如，给出 n = 3，生成结果为：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-8</title>
    <link href="http://nichunen.github.io/2023/10/07/gold-8-8/"/>
    <id>http://nichunen.github.io/2023/10/07/gold-8-8/</id>
    <published>2023-10-07T08:48:19.000Z</published>
    <updated>2023-10-07T09:10:08.261Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;有重复字符串的排列组合。编写一种方法，计算某字符串的所有排列组合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-7</title>
    <link href="http://nichunen.github.io/2023/10/06/gold-8-7/"/>
    <id>http://nichunen.github.io/2023/10/06/gold-8-7/</id>
    <published>2023-10-06T03:03:48.000Z</published>
    <updated>2023-10-06T03:35:57.942Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;无重复字符串的排列组合。编写一种方法，计算某字符串的所有排列组合，字符串每个字符均不相同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-6</title>
    <link href="http://nichunen.github.io/2023/10/05/gold-8-6/"/>
    <id>http://nichunen.github.io/2023/10/05/gold-8-6/</id>
    <published>2023-10-05T05:34:35.000Z</published>
    <updated>2023-10-05T06:36:42.953Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在经典汉诺塔问题中，有 3 根柱子及 N 个不同大小的穿孔圆盘，盘子可以滑入任意一根柱子。一开始，所有盘子自上而下按升序依次套在第一根柱子上(即每一个盘子只能放在更大的盘子上面)。移动圆盘时受到以下限制:&lt;br&gt;(1) 每次只能移动一个盘子;&lt;br&gt;(2)</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-5</title>
    <link href="http://nichunen.github.io/2023/09/28/gold-8-5/"/>
    <id>http://nichunen.github.io/2023/09/28/gold-8-5/</id>
    <published>2023-09-28T04:56:49.000Z</published>
    <updated>2023-09-28T04:59:21.892Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;递归乘法。 写一个递归函数，不使用 * 运算符， 实现两个正整数的相乘。可以使用加号、减号、位移，但要吝啬一些。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-4</title>
    <link href="http://nichunen.github.io/2023/09/27/gold-8-4/"/>
    <id>http://nichunen.github.io/2023/09/27/gold-8-4/</id>
    <published>2023-09-27T03:40:01.000Z</published>
    <updated>2023-09-27T08:19:44.397Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;幂集。编写一种方法，返回某集合的所有子集。集合中&lt;strong&gt;不包含重复的元素&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;说明：解集不能包含重复的子集。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-3</title>
    <link href="http://nichunen.github.io/2023/09/26/gold-8-3/"/>
    <id>http://nichunen.github.io/2023/09/26/gold-8-3/</id>
    <published>2023-09-26T11:10:58.000Z</published>
    <updated>2023-09-26T11:38:50.489Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;魔术索引。 在数组&lt;code&gt;A[0...n-1]&lt;/code&gt;中，有所谓的魔术索引，满足条件&lt;code&gt;A[i] =</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-2</title>
    <link href="http://nichunen.github.io/2023/09/21/gold-8-2/"/>
    <id>http://nichunen.github.io/2023/09/21/gold-8-2/</id>
    <published>2023-09-21T10:52:59.000Z</published>
    <updated>2023-09-21T14:47:43.024Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设想有个机器人坐在一个网格的左上角，网格 r 行 c 列。机器人只能向下或向右移动，但不能走到一些被禁止的网格（有障碍物）。设计一种算法，寻找机器人从左上角移动到右下角的路径。&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-8-1</title>
    <link href="http://nichunen.github.io/2023/09/20/gold-8-1/"/>
    <id>http://nichunen.github.io/2023/09/20/gold-8-1/</id>
    <published>2023-09-20T03:17:32.000Z</published>
    <updated>2023-09-20T06:49:53.215Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;三步问题。有个小孩正在上楼梯，楼梯有n阶台阶，小孩一次可以上1阶、2阶或3阶。实现一种方法，计算小孩有多少种上楼梯的方式。结果可能很大，你需要对结果模1000000007。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-5-7</title>
    <link href="http://nichunen.github.io/2023/09/13/gold-5-7/"/>
    <id>http://nichunen.github.io/2023/09/13/gold-5-7/</id>
    <published>2023-09-13T05:17:35.000Z</published>
    <updated>2023-09-13T05:30:11.073Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;配对交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-5-6</title>
    <link href="http://nichunen.github.io/2023/09/12/gold-5-6/"/>
    <id>http://nichunen.github.io/2023/09/12/gold-5-6/</id>
    <published>2023-09-12T03:06:27.000Z</published>
    <updated>2023-09-12T03:55:31.439Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;整数转换。编写一个函数，确定需要改变几个位才能将整数A转成整数B。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-5-4</title>
    <link href="http://nichunen.github.io/2023/09/11/gold-5-4/"/>
    <id>http://nichunen.github.io/2023/09/11/gold-5-4/</id>
    <published>2023-09-11T05:45:36.000Z</published>
    <updated>2023-09-11T05:50:17.127Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;下一个数。给定一个正整数，找出与其二进制表达式中1的个数相同且大小最接近的那两个数（一个略大，一个略小）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-5-3</title>
    <link href="http://nichunen.github.io/2023/09/10/gold-5-3/"/>
    <id>http://nichunen.github.io/2023/09/10/gold-5-3/</id>
    <published>2023-09-10T03:03:02.000Z</published>
    <updated>2023-09-10T07:34:18.991Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个32位整数 &lt;code&gt;num&lt;/code&gt;，你可以将一个数位从0变为1。请编写一个程序，找出你能够获得的最长的一串1的长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-5-2</title>
    <link href="http://nichunen.github.io/2023/09/08/gold-5-2/"/>
    <id>http://nichunen.github.io/2023/09/08/gold-5-2/</id>
    <published>2023-09-08T03:30:15.000Z</published>
    <updated>2023-09-08T04:41:52.256Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;二进制数转字符串。给定一个介于0和1之间的实数（如0.72），类型为double，打印它的二进制表达式。如果该数字无法精确地用32位以内的二进制表示，则打印“ERROR”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-5-1</title>
    <link href="http://nichunen.github.io/2023/09/05/gold-5-1/"/>
    <id>http://nichunen.github.io/2023/09/05/gold-5-1/</id>
    <published>2023-09-05T13:18:32.000Z</published>
    <updated>2023-09-05T14:31:50.367Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定两个整型数字 &lt;code&gt;N&lt;/code&gt; 与 &lt;code&gt;M&lt;/code&gt;，以及表示比特位置的 &lt;code&gt;i&lt;/code&gt; 与 &lt;code&gt;j&lt;/code&gt;（&lt;code&gt;i &amp;lt;= j&lt;/code&gt;，且从 0 位开始计算）。&lt;/p&gt;
&lt;p&gt;编写一种方法，使</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-4-12</title>
    <link href="http://nichunen.github.io/2023/09/04/gold-4-12/"/>
    <id>http://nichunen.github.io/2023/09/04/gold-4-12/</id>
    <published>2023-09-04T07:43:30.000Z</published>
    <updated>2023-09-04T09:18:57.066Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一棵二叉树，其中每个节点都含有一个整数数值(该值或正或负)。设计一个算法，打印节点数值总和等于某个给定值的所有路径的数量。注意，路径不一定非得从二叉树的根节点或叶节点开始或结束，但是其方向必须向下(只能从父节点指向子节点方向)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-4-10</title>
    <link href="http://nichunen.github.io/2023/09/03/gold-4-10/"/>
    <id>http://nichunen.github.io/2023/09/03/gold-4-10/</id>
    <published>2023-09-03T02:52:18.000Z</published>
    <updated>2023-09-03T03:48:37.445Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;检查子树。你有两棵非常大的二叉树：T1，有几万个节点；T2，有几万个节点。设计一个算法，判断 T2 是否为 T1 的子树。&lt;/p&gt;
&lt;p&gt;如果 T1 有这么一个节点 n，其子树与 T2 一模一样，则 T2 为 T1 的子树，也就是说，从节点 n 处把树砍断，得到的树与</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-4-9</title>
    <link href="http://nichunen.github.io/2023/09/01/gold-4-9/"/>
    <id>http://nichunen.github.io/2023/09/01/gold-4-9/</id>
    <published>2023-09-01T05:45:03.000Z</published>
    <updated>2023-09-01T06:00:09.563Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;从左向右遍历一个数组，通过不断将其中的元素插入树中可以逐步地生成一棵二叉搜索树。&lt;/p&gt;
&lt;p&gt;给定一个由&lt;strong&gt;不同节点&lt;/strong&gt;组成的二叉搜索树 &lt;code&gt;root&lt;/code&gt;，输出所有可能生成此树的数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>gold-4-8</title>
    <link href="http://nichunen.github.io/2023/08/31/gold-4-8/"/>
    <id>http://nichunen.github.io/2023/08/31/gold-4-8/</id>
    <published>2023-08-31T03:03:51.000Z</published>
    <updated>2023-08-31T03:55:47.097Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计并实现一个算法，找出二叉树中某两个节点的第一个共同祖先。不得将其他的节点存储在另外的数据结构中。注意：这不一定是二叉搜索树。&lt;/p&gt;
&lt;p&gt;例如，给定如下二叉树: root = [3,5,1,6,2,0,8,null,null,7,4]&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
</feed>
