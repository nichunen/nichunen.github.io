<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>倪春恩的博客</title>
  
  <subtitle>倪春恩的博客</subtitle>
  <link href="http://nichunen.github.io/atom.xml" rel="self"/>
  
  <link href="http://nichunen.github.io/"/>
  <updated>2023-04-27T11:03:53.603Z</updated>
  <id>http://nichunen.github.io/</id>
  
  <author>
    <name>Ni Chunen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>offer2-34</title>
    <link href="http://nichunen.github.io/2023/04/27/offer2-34/"/>
    <id>http://nichunen.github.io/2023/04/27/offer2-34/</id>
    <published>2023-04-27T09:28:53.000Z</published>
    <updated>2023-04-27T11:03:53.603Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;某种外星语也使用英文小写字母，但可能顺序 &lt;code&gt;order&lt;/code&gt; 不同。字母表的顺序（&lt;code&gt;order&lt;/code&gt;）是一些小写字母的排列。&lt;/p&gt;
&lt;p&gt;给定一组用外星语书写的单词 &lt;code&gt;words&lt;/code&gt;，以及其字母表的顺序</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>【转载】设计模式：原型模式</title>
    <link href="http://nichunen.github.io/2023/04/26/design-pattern-proxy/"/>
    <id>http://nichunen.github.io/2023/04/26/design-pattern-proxy/</id>
    <published>2023-04-26T09:18:04.000Z</published>
    <updated>2023-04-26T09:32:59.034Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在代理模式（Proxy</summary>
        
      
    
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>offer2-33</title>
    <link href="http://nichunen.github.io/2023/04/26/offer2-33/"/>
    <id>http://nichunen.github.io/2023/04/26/offer2-33/</id>
    <published>2023-04-26T03:25:38.000Z</published>
    <updated>2023-04-26T08:55:08.996Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个字符串数组 &lt;code&gt;strs&lt;/code&gt; ，将 &lt;strong&gt;变位词&lt;/strong&gt; 组合在一起。</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer2-32</title>
    <link href="http://nichunen.github.io/2023/04/25/offer2-32/"/>
    <id>http://nichunen.github.io/2023/04/25/offer2-32/</id>
    <published>2023-04-25T08:10:53.000Z</published>
    <updated>2023-04-25T12:09:40.583Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定两个字符串 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; ，编写一个函数来判断它们是不是一组变位词（字母异位词）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;若 &lt;code&gt;*s*&lt;/code&gt; 和 &lt;code&gt;*t*&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>【转载】设计模式：享元模式</title>
    <link href="http://nichunen.github.io/2023/04/24/design-pattern-flyweight/"/>
    <id>http://nichunen.github.io/2023/04/24/design-pattern-flyweight/</id>
    <published>2023-04-24T13:40:16.000Z</published>
    <updated>2023-04-25T05:47:20.338Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;享元模式（Flyweight</summary>
        
      
    
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>offer-61</title>
    <link href="http://nichunen.github.io/2023/04/24/offer-61/"/>
    <id>http://nichunen.github.io/2023/04/24/offer-61/</id>
    <published>2023-04-24T03:28:59.000Z</published>
    <updated>2023-04-24T05:11:41.126Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;从&lt;strong&gt;若干副扑克牌&lt;/strong&gt;中随机抽 &lt;code&gt;5&lt;/code&gt; 张牌，判断是不是一个顺子，即这5张牌是不是连续的。2～10为数字本身，A为1，J为11，Q为12，K为13，而大、小王为 0 ，可以看成任意数字。A 不能视为</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-59-2</title>
    <link href="http://nichunen.github.io/2023/04/23/offer-59-2/"/>
    <id>http://nichunen.github.io/2023/04/23/offer-59-2/</id>
    <published>2023-04-23T06:28:13.000Z</published>
    <updated>2023-04-23T06:49:40.341Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;请定义一个队列并实现函数 &lt;code&gt;max_value&lt;/code&gt; 得到队列里的最大值，要求函数&lt;code&gt;max_value&lt;/code&gt;、&lt;code&gt;push_back&lt;/code&gt; 和 &lt;code&gt;pop_front&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-67</title>
    <link href="http://nichunen.github.io/2023/04/21/offer-67/"/>
    <id>http://nichunen.github.io/2023/04/21/offer-67/</id>
    <published>2023-04-21T02:59:24.000Z</published>
    <updated>2023-04-21T11:35:02.960Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;写一个函数 StrToInt，实现把字符串转换成整数这个功能。不能使用 atoi</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-45</title>
    <link href="http://nichunen.github.io/2023/04/19/offer-45/"/>
    <id>http://nichunen.github.io/2023/04/19/offer-45/</id>
    <published>2023-04-19T03:18:03.000Z</published>
    <updated>2023-04-20T09:27:22.541Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;输入一个非负整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-13</title>
    <link href="http://nichunen.github.io/2023/04/18/offer-13/"/>
    <id>http://nichunen.github.io/2023/04/18/offer-13/</id>
    <published>2023-04-18T06:30:13.000Z</published>
    <updated>2023-04-18T09:22:50.786Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;地上有一个m行n列的方格，从坐标 &lt;code&gt;[0,0]&lt;/code&gt; 到坐标 &lt;code&gt;[m-1,n-1]&lt;/code&gt; 。一个机器人从坐标 &lt;code&gt;[0, 0]</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer2-31</title>
    <link href="http://nichunen.github.io/2023/04/17/offer2-31/"/>
    <id>http://nichunen.github.io/2023/04/17/offer2-31/</id>
    <published>2023-04-17T11:19:04.000Z</published>
    <updated>2023-04-17T12:45:48.695Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;运用所掌握的数据结构，设计和实现一个 &lt;a href=&quot;https://baike.baidu.com/item/LRU&quot;&gt;LRU (Least Recently Used，最近最少使用) 缓存机制&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;实现</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer2-30</title>
    <link href="http://nichunen.github.io/2023/04/14/offer2-30/"/>
    <id>http://nichunen.github.io/2023/04/14/offer2-30/</id>
    <published>2023-04-14T06:00:41.000Z</published>
    <updated>2023-04-14T07:39:58.171Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计一个支持在&lt;em&gt;平均&lt;/em&gt; 时间复杂度 &lt;strong&gt;O(1)&lt;/strong&gt; 下，执行以下操作的数据结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;insert(val)&lt;/code&gt;：当元素 &lt;code&gt;val&lt;/code&gt; 不存在时返回</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer2-29</title>
    <link href="http://nichunen.github.io/2023/04/13/offer2-29/"/>
    <id>http://nichunen.github.io/2023/04/13/offer2-29/</id>
    <published>2023-04-13T11:54:15.000Z</published>
    <updated>2023-04-14T06:01:10.608Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定&lt;strong&gt;循环单调非递减列表&lt;/strong&gt;中的一个点，写一个函数向这个列表中插入一个新元素 &lt;code&gt;insertVal&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>【转载】设计模式：原型模式</title>
    <link href="http://nichunen.github.io/2023/04/12/design-pattern-prototype/"/>
    <id>http://nichunen.github.io/2023/04/12/design-pattern-prototype/</id>
    <published>2023-04-12T07:23:22.000Z</published>
    <updated>2023-04-13T11:27:52.406Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;原型模式（Prototype</summary>
        
      
    
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>offer2-28</title>
    <link href="http://nichunen.github.io/2023/04/12/offer2-28/"/>
    <id>http://nichunen.github.io/2023/04/12/offer2-28/</id>
    <published>2023-04-12T02:59:09.000Z</published>
    <updated>2023-04-12T06:13:18.963Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;多级双向链表中，除了指向下一个节点和前一个节点指针之外，它还有一个子链表指针，可能指向单独的双向链表。这些子列表也可能会有一个或多个自己的子项，依此类推，生成多级数据结构，如下面的示例所示。&lt;/p&gt;
&lt;p&gt;给定位于列表第一级的头节点，请扁平化列表，即将这样的多级双向链表展平</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>【转载】设计模式：建造者模式(Builder Pattern)-以造汽车买汽车为例</title>
    <link href="http://nichunen.github.io/2023/04/11/design-pattern-builder/"/>
    <id>http://nichunen.github.io/2023/04/11/design-pattern-builder/</id>
    <published>2023-04-11T05:58:15.000Z</published>
    <updated>2023-04-11T06:45:09.582Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;定义：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。&lt;/p&gt;
&lt;p&gt;类型：创建类模式&lt;/p&gt;
&lt;p&gt;类图：&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>offer2-27</title>
    <link href="http://nichunen.github.io/2023/04/11/offer2-27/"/>
    <id>http://nichunen.github.io/2023/04/11/offer2-27/</id>
    <published>2023-04-11T02:48:49.000Z</published>
    <updated>2023-04-11T05:34:39.553Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个链表的 &lt;strong&gt;头节点&lt;/strong&gt; &lt;code&gt;head&lt;/code&gt;</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>【转载】设计模式：状态模式-以自动售货机为例</title>
    <link href="http://nichunen.github.io/2023/04/10/design-pattern-state/"/>
    <id>http://nichunen.github.io/2023/04/10/design-pattern-state/</id>
    <published>2023-04-10T07:10:25.000Z</published>
    <updated>2023-04-10T09:45:29.663Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;先看定义：允许对象在内部状态改变时改变它的行为，对象看起来好像修改了它的类。定义又开始模糊了，理一下，当对象的内部状态改变时，它的行为跟随状态的改变而改变了，看起来好像重新初始化了一个类似的。&lt;/p&gt;
&lt;p&gt;下面使用个例子来说明状态模式的用法，现在有个自动售货机的代码需要我</summary>
        
      
    
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="设计模式" scheme="http://nichunen.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>offer2-26</title>
    <link href="http://nichunen.github.io/2023/04/10/offer2-26/"/>
    <id>http://nichunen.github.io/2023/04/10/offer2-26/</id>
    <published>2023-04-10T03:25:10.000Z</published>
    <updated>2023-04-10T06:10:18.027Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个单链表 &lt;code&gt;L&lt;/code&gt; 的头节点 &lt;code&gt;head&lt;/code&gt; ，单链表 &lt;code&gt;L&lt;/code&gt; 表示为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;L0 → L1 → … → Ln-1 →</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer2-25</title>
    <link href="http://nichunen.github.io/2023/04/07/offer2-25/"/>
    <id>http://nichunen.github.io/2023/04/07/offer2-25/</id>
    <published>2023-04-07T06:26:12.000Z</published>
    <updated>2023-04-07T09:34:33.016Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定两个 &lt;strong&gt;非空链表&lt;/strong&gt; &lt;code&gt;l1&lt;/code&gt;和 &lt;code&gt;l2&lt;/code&gt; 来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。&lt;/p&gt;
&lt;p&gt;可以假设除了数字 0</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
</feed>
