<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>倪春恩的博客</title>
  
  <subtitle>倪春恩的博客</subtitle>
  <link href="http://nichunen.github.io/atom.xml" rel="self"/>
  
  <link href="http://nichunen.github.io/"/>
  <updated>2023-02-13T03:23:21.726Z</updated>
  <id>http://nichunen.github.io/</id>
  
  <author>
    <name>Ni Chunen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>offer-55-1</title>
    <link href="http://nichunen.github.io/2023/02/13/offer-55-1/"/>
    <id>http://nichunen.github.io/2023/02/13/offer-55-1/</id>
    <published>2023-02-13T03:17:07.000Z</published>
    <updated>2023-02-13T03:23:21.726Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;输入一棵二叉树的根节点，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长度为树的深度。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;给定二叉树 &lt;code&gt;[3,9,20,null,null,15,7]&lt;/code&gt;，&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-54</title>
    <link href="http://nichunen.github.io/2023/02/12/offer-54/"/>
    <id>http://nichunen.github.io/2023/02/12/offer-54/</id>
    <published>2023-02-12T03:28:15.000Z</published>
    <updated>2023-02-12T05:53:41.880Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一棵二叉搜索树，请找出其中第 &lt;code&gt;k&lt;/code&gt; 大的节点的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-53</title>
    <link href="http://nichunen.github.io/2023/02/10/offer-53/"/>
    <id>http://nichunen.github.io/2023/02/10/offer-53/</id>
    <published>2023-02-10T03:01:09.000Z</published>
    <updated>2023-02-10T03:24:55.374Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-51</title>
    <link href="http://nichunen.github.io/2023/02/09/offer-51/"/>
    <id>http://nichunen.github.io/2023/02/09/offer-51/</id>
    <published>2023-02-09T03:47:25.000Z</published>
    <updated>2023-02-09T05:46:04.604Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组，求出这个数组中的逆序对的总数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-50</title>
    <link href="http://nichunen.github.io/2023/02/08/offer-50/"/>
    <id>http://nichunen.github.io/2023/02/08/offer-50/</id>
    <published>2023-02-08T02:57:48.000Z</published>
    <updated>2023-02-08T03:24:47.341Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在字符串 s 中找出第一个只出现一次的字符。如果没有，返回一个单空格。 s 只包含小写字母。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-49</title>
    <link href="http://nichunen.github.io/2023/02/07/offer-49/"/>
    <id>http://nichunen.github.io/2023/02/07/offer-49/</id>
    <published>2023-02-07T03:06:08.000Z</published>
    <updated>2023-02-07T06:11:52.518Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我们把只包含质因子 2、3 和 5 的数称作丑数（Ugly Number）。求按从小到大的顺序的第 n 个丑数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-48</title>
    <link href="http://nichunen.github.io/2023/02/06/offer-48/"/>
    <id>http://nichunen.github.io/2023/02/06/offer-48/</id>
    <published>2023-02-06T08:30:01.000Z</published>
    <updated>2023-02-06T08:55:28.650Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-47</title>
    <link href="http://nichunen.github.io/2023/02/05/offer-47/"/>
    <id>http://nichunen.github.io/2023/02/05/offer-47/</id>
    <published>2023-02-05T03:25:35.000Z</published>
    <updated>2023-02-05T06:07:31.901Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在一个 m*n 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-46</title>
    <link href="http://nichunen.github.io/2023/02/03/offer-46/"/>
    <id>http://nichunen.github.io/2023/02/03/offer-46/</id>
    <published>2023-02-03T03:39:29.000Z</published>
    <updated>2023-02-03T06:42:34.840Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给定一个数字，我们按照如下规则把它翻译为字符串：0 翻译成 “a” ，1 翻译成 “b”，……，11 翻译成 “l”，……，25 翻译成 “z”。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-44</title>
    <link href="http://nichunen.github.io/2023/02/02/offer-44/"/>
    <id>http://nichunen.github.io/2023/02/02/offer-44/</id>
    <published>2023-02-02T07:26:46.000Z</published>
    <updated>2023-02-02T09:51:05.132Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;数字以0123456789101112131415…的格式序列化到一个字符序列中。在这个序列中，第5位（从下标0开始计数）是5，第13位是1，第19位是4，等等。&lt;/p&gt;
&lt;p&gt;请写一个函数，求任意第n位对应的数字。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-43</title>
    <link href="http://nichunen.github.io/2023/02/01/offer-43/"/>
    <id>http://nichunen.github.io/2023/02/01/offer-43/</id>
    <published>2023-02-01T09:48:48.000Z</published>
    <updated>2023-02-01T13:18:24.343Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;输入一个整数 &lt;code&gt;n&lt;/code&gt; ，求1～n这n个整数的十进制表示中1出现的次数。&lt;/p&gt;
&lt;p&gt;例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>How to setup debugging environment for Kylin5 locally</title>
    <link href="http://nichunen.github.io/2023/01/31/kylin-5-debug/"/>
    <id>http://nichunen.github.io/2023/01/31/kylin-5-debug/</id>
    <published>2023-01-31T08:44:33.000Z</published>
    <updated>2023-02-09T03:47:33.107Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;1-Check-Software-Requirement&quot;&gt;&lt;a href=&quot;#1-Check-Software-Requirement&quot; class=&quot;headerlink&quot; title=&quot;1. Check Software</summary>
        
      
    
    
    
    <category term="bigdata" scheme="http://nichunen.github.io/categories/bigdata/"/>
    
    
    <category term="kylin" scheme="http://nichunen.github.io/tags/kylin/"/>
    
  </entry>
  
  <entry>
    <title>offer-42</title>
    <link href="http://nichunen.github.io/2023/01/31/offer-42/"/>
    <id>http://nichunen.github.io/2023/01/31/offer-42/</id>
    <published>2023-01-31T03:31:36.000Z</published>
    <updated>2023-01-31T05:44:12.372Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。&lt;/p&gt;
&lt;p&gt;要求时间复杂度为O(n)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-41</title>
    <link href="http://nichunen.github.io/2023/01/30/offer-41/"/>
    <id>http://nichunen.github.io/2023/01/30/offer-41/</id>
    <published>2023-01-30T11:50:18.000Z</published>
    <updated>2023-01-30T14:53:57.900Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如何得到一个数据流中的中位数？如果从数据流中读出奇数个数值，那么中位数就是所有数值排序之后位于中间的数值。如果从数据流中读出偶数个数值，那么中位数就是所有数值排序之后中间两个数的平均值。&lt;/p&gt;
&lt;p&gt;例如，&lt;/p&gt;
&lt;p&gt;[2,3,4] 的中位数是</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-40</title>
    <link href="http://nichunen.github.io/2023/01/29/offer-40/"/>
    <id>http://nichunen.github.io/2023/01/29/offer-40/</id>
    <published>2023-01-29T03:14:32.000Z</published>
    <updated>2023-01-29T05:39:57.577Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;输入整数数组 &lt;code&gt;arr&lt;/code&gt; ，找出其中最小的 &lt;code&gt;k&lt;/code&gt; 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-39</title>
    <link href="http://nichunen.github.io/2023/01/28/offer-39/"/>
    <id>http://nichunen.github.io/2023/01/28/offer-39/</id>
    <published>2023-01-28T06:03:30.000Z</published>
    <updated>2023-01-28T09:14:21.900Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。&lt;/p&gt;
&lt;p&gt;你可以假设数组是非空的，并且给定的数组总是存在多数元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-37</title>
    <link href="http://nichunen.github.io/2023/01/20/offer-37/"/>
    <id>http://nichunen.github.io/2023/01/20/offer-37/</id>
    <published>2023-01-20T03:25:33.000Z</published>
    <updated>2023-01-20T08:15:28.736Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;请实现两个函数，分别用来序列化和反序列化二叉树。&lt;/p&gt;
&lt;p&gt;你需要设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 /</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-36</title>
    <link href="http://nichunen.github.io/2023/01/19/offer-36/"/>
    <id>http://nichunen.github.io/2023/01/19/offer-36/</id>
    <published>2023-01-19T03:14:31.000Z</published>
    <updated>2023-01-20T03:28:23.978Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的循环双向链表。要求不能创建任何新的节点，只能调整树中节点指针的指向。&lt;/p&gt;
&lt;p&gt;为了让您更好地理解问题，以下面的二叉搜索树为例：&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-35</title>
    <link href="http://nichunen.github.io/2023/01/18/offer-35/"/>
    <id>http://nichunen.github.io/2023/01/18/offer-35/</id>
    <published>2023-01-18T03:24:51.000Z</published>
    <updated>2023-01-18T03:49:06.051Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;请实现 &lt;code&gt;copyRandomList&lt;/code&gt; 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 &lt;code&gt;next&lt;/code&gt; 指针指向下一个节点，还有一个 &lt;code&gt;random&lt;/code&gt; 指针指向链表中的任意节点或者</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>offer-34</title>
    <link href="http://nichunen.github.io/2023/01/17/offer-34/"/>
    <id>http://nichunen.github.io/2023/01/17/offer-34/</id>
    <published>2023-01-17T09:15:46.000Z</published>
    <updated>2023-01-18T03:25:08.144Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;给你二叉树的根节点 &lt;code&gt;root&lt;/code&gt; 和一个整数目标和 &lt;code&gt;targetSum&lt;/code&gt; ，找出所有 &lt;strong&gt;从根节点到叶子节点&lt;/strong&gt;</summary>
        
      
    
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/categories/leetcode/"/>
    
    
    <category term="leetcode" scheme="http://nichunen.github.io/tags/leetcode/"/>
    
  </entry>
  
</feed>
